<snippet>
	<content><![CDATA[
#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <cmath>
#include <vector>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>
#include <queue>
#include <ctime>
#include <cassert>
#include <complex>
#include <string>
#include <cstring>
#include <chrono>
#include <random>
#include <bitset>
#include <array>
using namespace std;

#ifdef josuerom
	#define eprintf(...) {fprintf(stderr, __VA_ARGS__);fflush(stderr);}
#else
	#define eprintf(...) 42
#endif

using ll = long long;
using ld = long double;
using uint = unsigned int;
using ull = unsigned long long;
template<typename T>
using pair2 = pair<T, T>;
using pii = pair<int, int>;
using pli = pair<ll, int>;
using pll = pair<ll, ll>;
mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());
ll myRand(ll B) {
	return (ull)rng() % B;
}

#define pb push_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define fi first
#define se second

clock_t startTime;
double getCurrentTime() {
	return (double)(clock() - startTime) / CLOCKS_PER_SEC;
}

const uint MOD = 1000000007;
const int N = (int) 1e6 + 13;
const int K = 40;
int n;
int a[N];
ll A[N], B[N];

void solve() {
	$1
}

int main() {
	startTime = clock();
//	freopen("sample/input.in", "r", stdin);
//	freopen("sample/output.ans", "w", stdout);
	int tc = 0;
	scanf("%d", &tc);
	for (int i = 1; i <= tc; i++) {
		printf("--- Case #%d start ---\n", i);
		// printf("Case #%d: ", i);

		solve();
		// printf("%lld\n", (ll)solve());
		
		/*
		if (solve()) printf("YES\n");
		else printf("NO\n");
		*/
		eprintf("--- Case #%d end ---\n", i);
		eprintf("time = %.5lf\n", getCurrentTime());
		eprintf("---------------------\n");
	}
	return 0;
}
]]></content>
	<tabTrigger>tem4 Um_nik</tabTrigger>
</snippet>
